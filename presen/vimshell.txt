vimshell

zshをも超える究極のShell
                        Shougo

--------------------------------
まずは自己紹介

Shougo
Vim歴４年目。だが、本格的にVimに目覚めたのはごく最近のこと。
Vimを使い始めたのは、Vimは多数の言語に対してsyntaxハイライトができたから。
最近までneocomplcacheの開発に忙しかったが、
まだまだvimshellもやることがいっぱいあって現実逃避中。

--------------------------------
代表作
・bufstatus
http://github.com/Shougo/shougo-s-github/blob/a1a9d5d0a9a4a53fedec52f7d1be0c9c9341f787/vim/plugin/bufstatus.vim
・vimshell
https://github.com/Shougo/vimshell/tree
・neocomplcache
https://github.com/Shougo/neocomplcache/tree

今回は、みんながお待ちかねのvimshellについて話をします。

--------------------------------
vimshellとは？

VimScriptによって実装された究極のシェル。
略してvshell。ただし、eshellとは違ってまだまだです。
一番の特徴としては、Vimのプラグインと連携ができること。

--------------------------------
似た感じのスクリプト

・vimsh.vim
・Shell.vim
・Vim-Shellプロジェクト
・eshell.el

--------------------------------
vimsh.vimの良いところ
・インタラクティブなシェルが起動できる
・Vimから独立している

vimsh.vimの悪いところ
・Pythonインタフェースが必要
・バグ多い
・必要なくても勝手に起動する

--------------------------------
Shell.vimの良いところ
・動作が単純
・完全にVimScriptで動作する
・一部が内部コマンドで実現されている

Shell.vimの悪いところ
・もう長い間更新されてない
・インタラクティブなプログラムを起動するとフリーズ

--------------------------------
Vim-Shellプロジェクトの良いところ
・完全なシェルを動作させることができる
・色分けもできる

Vim-Shellプロジェクトの悪いところ
・あまりに巨大なパッチなので、本家に取り込まれることはない
・Vimのバージョンごとの互換性がない
・しかも更新頻度が遅い

--------------------------------
eshell.elの良いところ
・完全なシェルを動作させることができる
・完全にEmacs内で動作する
・cursesも動作する？
・色分けもできる
・情報多い

eshell.elの悪いところ
・Emacsen専用
・起動が重い

--------------------------------
vimshell.vimの良いところ
・完全にVim内で動作する
・色分けもできる
・開発早い
・他のプラグインと連携できる
・ワンライナー対応
・実験的ながら、非同期実行をサポート
・自動ディレクトリスタックや、auto_cdなど、zshの機能を取り込んでいる

vimshell.vimの悪いところ
・入力を必要とする非同期実行はサポートされない
・まだ内部コマンドのリダイレクトやパイプラインは実現できてない
・プラグイン作りづらい
・制御構造がない
・情報少ない

--------------------------------
vimshellの歴史

Shell.vimの表示が見づらいので色分けを始める
　　　　　　↓
　　内部が汚かったので、大幅改造
　　　　　　↓
もはや別物になったのでvimshellに改名
　　　　　　↓
　　githubで公開してみる
　　　　　　↓
　　　　反響大きい
　　　　　　↓
thincaさんの薦めで、内部をプラグイン化
　　　　　　↓
ついカッとなり、zshの機能を取り込む
　　　　　　↓
ついカッとなり、ワンライナー対応してみる
　　　　　　↓
　　　　さらなる暴走
　　　　　　↓
　　そして現在に至る……

詳しくはChangeLog:で。

--------------------------------
vimshellの代表的機能

・色分け
・ヒストリ
・他のプラグインとの連携
・ディレクトリスタック
・auto_cd
・スクリプト実行
・シェル呼び出し
・ワンライナー対応
・簡易電卓機能
・プラグインによる機能拡張
・aliasコマンド
・シェル変数もどき
・非同期実行（実験的機能）
・独自のカレントディレクトリ
・vimコマンド

--------------------------------
色分け

vimshellバッファ上で、.ファイルやディレクトリ、実行ファイル等を認識し、
見やすいように色分けをします。

ちなみに、vimshのToDoにも色分けのことは書いてあったので、
vimshellのほうが先に実装したことになります。

--------------------------------
ヒストリ

私はものぐさなので、ヒストリ機能には力を注いでいます。

--------------------------------
他のプラグインとの連携

vimshellはほぼ100% Vimの機能を使って実装されているので、
他のプラグインと連携させることができます。
というより、これがなかったら私もvimshellは使ってないと思います。

例えばneocomplcacheと連携させることで、ヒストリからの引数補完や、
自動ディレクトリ補完が実現できます。
vimshellのバッファをたどればヒストリ実行もできます。

--------------------------------
私の設定

if has('win32') || has('win64') 
    " Display user name on Windows.
    let g:VimShell_Prompt = $USERNAME."% "

    " Use ckw.
    let g:VimShell_UseCkw = 1
else
    " Display user name on Linux.
    let g:VimShell_Prompt = $USER."% "
endif
" Use smartcase.
let g:VimShell_SmartCase = 1

プロンプトをユーザ名にしているだけで、後は凝った設定はしてないです。

--------------------------------
日本語情報

あのtaku_oさんに紹介されました！！


--------------------------------
入手方法

http://github.com/Shougo/vimshell/tree/master （毎週更新）

ちゃんとしたドキュメントができたらwww.vim.orgにも登録したいです。

--------------------------------
使い方

--------------------------------
サポート

何か問題があれば、http://www.lingr.com/room/vim-users.jpまで！（宣伝）

--------------------------------
まとめ

せっかく作ったので、皆さん使ってみてください。
夢は「名無しのVim使い」で紹介されること。

--------------------------------
次回はどうしようかな……。

続く？

--------------------------------
更新履歴

2009/03/7      やっつけで作成。
--------------------------------
